# Generated by Django 2.2.4 on 2019-09-10 20:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bundesland',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Landesverband', models.CharField(blank=True, max_length=25, unique=True)),
                ('LV', models.CharField(blank=True, max_length=2, unique=True)),
            ],
            options={
                'verbose_name': 'Bundesland',
                'verbose_name_plural': 'Bundesländer',
            },
        ),
        migrations.CreateModel(
            name='Fachgruppe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Min', models.IntegerField(blank=True, null=True)),
                ('Max', models.IntegerField(blank=True, null=True)),
                ('Bezeichnung', models.CharField(blank=True, max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Fachgruppe',
                'verbose_name_plural': 'Fachgruppen',
            },
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bezeichnung', models.CharField(blank=True, max_length=25, unique=True)),
                ('plural_designation', models.CharField(blank=True, help_text='Pluralform der Bezeichnung (Kongresse, Seminare) für z.B. Auflistungen auf der Seite', max_length=25, verbose_name='Plural')),
                ('Maximale_Teilnehmer', models.IntegerField(blank=True, null=True)),
                ('Einlass', models.TimeField(blank=True, null=True)),
                ('Beginn', models.TimeField(blank=True, null=True)),
                ('Ende', models.TimeField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, default=False, verbose_name='öffentlich')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Absender E-Mail für automatische Nachrichten')),
                ('confirmation', models.TextField(blank=True, null=True, verbose_name='Vorlage für Bestätigung')),
                ('denial', models.TextField(blank=True, null=True, verbose_name='Vorlage für Absage')),
            ],
            options={
                'verbose_name': 'Veranstaltungsformat',
                'verbose_name_plural': 'Formate',
            },
        ),
        migrations.CreateModel(
            name='Funktion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nr_Fkt', models.IntegerField(blank=True, null=True)),
                ('Name_Fkt', models.CharField(blank=True, max_length=100)),
                ('Fachgruppe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Fachgruppe', verbose_name='Funktion')),
            ],
            options={
                'verbose_name': 'Funktion',
                'verbose_name_plural': 'Funktionen',
            },
        ),
        migrations.CreateModel(
            name='Geschlecht',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Herr_Frau', models.CharField(blank=True, max_length=8, null=True)),
                ('Endung', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'verbose_name': 'Geschlecht für Anrede (Herr/Frau)',
                'verbose_name_plural': 'Geschlechter',
            },
        ),
        migrations.CreateModel(
            name='Kreis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nr_Kreis', models.IntegerField(blank=True, null=True)),
                ('RegBez', models.CharField(blank=True, max_length=50, null=True)),
                ('Name_Kreis', models.CharField(blank=True, max_length=100, null=True)),
                ('Bundesland', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Bundesland')),
            ],
            options={
                'verbose_name': 'Kreis',
                'verbose_name_plural': 'Kreise',
            },
        ),
        migrations.CreateModel(
            name='Modul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bezeichnung', models.CharField(blank=True, max_length=200, unique=True)),
                ('short_name', models.CharField(blank=True, help_text='Kürzere Bezeichnung für Modul für Verwendungszweck und interne Verwendung', max_length=60, verbose_name='Kurzbezeichnung')),
                ('Beschreibung', models.TextField(blank=True, null=True)),
                ('Maximale_Teilnehmer', models.IntegerField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'Modul',
                'verbose_name_plural': 'Module',
            },
        ),
        migrations.CreateModel(
            name='Partei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Kürzel', models.CharField(blank=True, max_length=25, unique=True)),
                ('Langbezeichung', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titel', models.CharField(blank=True, max_length=50, null=True)),
                ('Familienname', models.CharField(blank=True, max_length=100, null=True)),
                ('Vorname', models.CharField(blank=True, max_length=100, null=True)),
                ('Titel_nachgestellt', models.CharField(blank=True, max_length=20, null=True)),
                ('E_Mail', models.EmailField(blank=True, max_length=100, null=True)),
                ('Zusatz_Adresse', models.CharField(blank=True, max_length=100, null=True)),
                ('Straße', models.CharField(blank=True, max_length=100, null=True)),
                ('PLZ', models.CharField(blank=True, max_length=50, null=True)),
                ('Ort', models.CharField(blank=True, max_length=100, null=True)),
                ('Funktion', models.CharField(blank=True, max_length=1000, null=True)),
                ('Institution', models.CharField(blank=True, max_length=200, null=True)),
                ('Tel1', models.CharField(blank=True, max_length=500, null=True, verbose_name='Telefonnummer 1')),
                ('Tel2', models.CharField(blank=True, max_length=500, null=True, verbose_name='Telefonnummer 2')),
                ('Quelle', models.CharField(blank=True, max_length=500, null=True)),
                ('verantwortlich', models.CharField(blank=True, max_length=30, null=True)),
                ('ausschließen', models.DateField(blank=True, null=True, verbose_name='ausschließen')),
                ('Index', models.IntegerField(blank=True, null=True)),
                ('Lfd_Nr_SEWOBE', models.IntegerField(blank=True, null=True)),
                ('SharePoint_ID', models.IntegerField(blank=True, null=True)),
                ('Jahrgang', models.IntegerField(blank=True, null=True)),
                ('Land', models.CharField(blank=True, max_length=30, null=True)),
                ('Notizen', models.TextField(blank=True, max_length=500, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('Anrede', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Geschlecht')),
                ('Bundesland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Bundesland')),
                ('Kreis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Kreis')),
                ('Partei', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Partei')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Personen',
            },
        ),
        migrations.CreateModel(
            name='Priorität',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bezeichnung', models.CharField(blank=True, max_length=25, unique=True)),
            ],
            options={
                'verbose_name': 'Priorität der Einladung',
                'verbose_name_plural': 'Prioritäten',
            },
        ),
        migrations.CreateModel(
            name='Veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titel', models.CharField(blank=True, help_text='Offizieller Titel der Veranstaltung für Einladungen', max_length=200)),
                ('Inhalt', models.CharField(blank=True, help_text='Inhalt der Veranstaltung für E-Mail-Betreff und URL, z.B. Streitgespräch zwischen Merting und dem Papst', max_length=200, null=True)),
                ('Einlass', models.DateTimeField(blank=True, null=True)),
                ('Beginn', models.DateTimeField(blank=True, null=True)),
                ('Ende', models.DateTimeField(blank=True, null=True)),
                ('Einladungstext', models.TextField(blank=True, help_text='Text, der als E-Mail-Einladung verschickt wird - Werte in {Klammern} werden serienbriefmäßig ersetzt.')),
                ('confirmation_text', models.TextField(blank=True, help_text='Text, der als Bestätigung verschickt wird - Werte in {{Klammern}} werden ersetzt.', verbose_name='Bestätigungstext')),
                ('Einladung_A4', models.FileField(blank=True, help_text='Hier soll die fertige Einladung als A4-Blatt hinkommen in der Form, in der sie an die Teilnehmer verschickt werden kann.', upload_to='')),
                ('Ordner_Cloud', models.URLField(blank=True, help_text='Order in einem externen Dateiensystem mit Dokumenten zur Veranstaltung.')),
                ('Seite', models.URLField(blank=True, help_text='Einladungsseite, falls eine spezifische URL und nicht die automatisch generierte im Feld Anmeldungsseite benutzt werden sollte (überschreibt Anmeldungsseite).')),
                ('site_ready', models.BooleanField(default=False, help_text='Ist Seite vollständig erstellt und bereit für den aktiven Betrieb?', verbose_name='Seite startklar')),
                ('Raum_Einladung', models.CharField(blank=True, help_text='Geografischer Raum, in dem die Veranstaltung stattfindet (Berlin, Frankfurt, Lüneburger Heide). Wird zu Sicherheitszwecken anstatt der Adresse oder eines kleinen Ortes angegeben.', max_length=100)),
                ('Veranstaltungsort', models.CharField(blank=True, help_text='Name der Gaststätte, Hotel oder anderer Einrichtung', max_length=100)),
                ('Veranstaltungsraum', models.CharField(blank=True, help_text='ggf. Raum innerhalb des Veranstaltungsortes', max_length=100)),
                ('Zusatz_Adresse', models.CharField(blank=True, max_length=100)),
                ('Straße', models.CharField(blank=True, max_length=100)),
                ('PLZ', models.CharField(blank=True, max_length=10)),
                ('Ort', models.CharField(blank=True, max_length=100)),
                ('Vertrag_Raummiete', models.FileField(blank=True, upload_to='')),
                ('Maximale_Teilnehmer', models.IntegerField(blank=True, help_text='Maximale Anzahl der Teilnehmer eingeben, sofern diese von der Anzahl rechts (von Modul oder Format) abweicht.', null=True)),
                ('hotel_rooms', models.IntegerField(blank=True, help_text='Anzahl der gebuchten Hotelzimmer (EZ und DZ zusammen)', null=True, verbose_name='Hotelzimmer')),
                ('Bemerkungen_Sachbearbeiter', models.TextField(blank=True, null=True)),
                ('confirmed_cache', models.IntegerField(blank=True, null=True)),
                ('valid_form_entries_cache', models.IntegerField(blank=True, null=True)),
                ('Bundesland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Bundesland')),
                ('Eingeladene_Personen', models.ManyToManyField(blank=True, to='crm.Person')),
                ('Format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='crm.Format')),
                ('Modul', models.ForeignKey(blank=True, help_text='I.e. Rhetorik 1, Islam, Kommunalpolitik 2', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='crm.Modul')),
            ],
            options={
                'verbose_name': 'Veranstaltung',
                'verbose_name_plural': 'Veranstaltungen',
            },
        ),
        migrations.CreateModel(
            name='Rechnung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rechnungsnsnummer_extern', models.CharField(blank=True, max_length=100, null=True)),
                ('Dienstleister', models.CharField(blank=True, max_length=500)),
                ('Gegenstand', models.CharField(blank=True, max_length=500)),
                ('Digitale_Rechnung', models.FileField(blank=True, help_text='Rechnung hier hochladen', upload_to='')),
                ('Rechnungsdatum', models.DateField(auto_now_add=True, null=True)),
                ('Rechnungsbetrag', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('an_Buchhaltung_weitergeleitet', models.DateField(blank=True, null=True)),
                ('Datum_beglichen', models.DateField(blank=True, null=True)),
                ('Bemerkungen_Sachbearbeiter', models.TextField(blank=True, null=True)),
                ('Veranstaltung', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Rechnungen', to='crm.Veranstaltung')),
            ],
            options={
                'verbose_name': 'Rechnung',
                'verbose_name_plural': 'Rechnungen',
            },
        ),
        migrations.CreateModel(
            name='PostcodeRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Min', models.IntegerField()),
                ('Max', models.IntegerField()),
                ('Bundesland', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Bundesland')),
            ],
            options={
                'verbose_name': 'PLZ',
                'verbose_name_plural': 'PLZ',
            },
        ),
        migrations.CreateModel(
            name='PersonFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bemerkungen_Sachbearbeiter', models.TextField(blank=True, null=True)),
                ('Bundesland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Bundesland', verbose_name='Bundesland')),
                ('Fachgruppe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Fachgruppe', verbose_name='Fachgruppe')),
                ('Funktion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Funktion', verbose_name='Funktion')),
                ('Kreis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Kreis')),
                ('Person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Funktion einer Person',
                'verbose_name_plural': 'Funktionen von Personen',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='Priorität',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.Priorität'),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Bezeichnung')),
                ('Fachgruppen', models.ManyToManyField(blank=True, to='crm.Fachgruppe')),
                ('functions', models.ManyToManyField(blank=True, to='crm.Funktion')),
                ('groups', models.ManyToManyField(blank=True, to='crm.Group')),
                ('modules', models.ManyToManyField(blank=True, help_text='Personen, die sich für frühere Veranstaltungen dieser Art anmeldeten.', to='crm.Modul')),
                ('persons', models.ManyToManyField(blank=True, to='crm.Person')),
                ('priorities', models.ManyToManyField(blank=True, to='crm.Priorität')),
                ('regions', models.ManyToManyField(blank=True, to='crm.Bundesland')),
            ],
            options={
                'verbose_name': 'Gruppe',
                'verbose_name_plural': 'Gruppen',
            },
        ),
        migrations.CreateModel(
            name='GravityFormular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Formular_ID', models.IntegerField(blank=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=1000)),
                ('entries', models.IntegerField(blank=True)),
                ('_Veranstaltung', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Anmeldeformular_verlinkt', to='crm.Veranstaltung', verbose_name='Veranstaltungen')),
            ],
            options={
                'verbose_name': 'Gravity-Formular',
                'verbose_name_plural': 'Gravity-Formulare',
            },
        ),
        migrations.CreateModel(
            name='FormEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titel', models.CharField(blank=True, max_length=50, null=True)),
                ('Vorname', models.CharField(blank=True, max_length=100)),
                ('Familienname', models.CharField(blank=True, max_length=100)),
                ('E_Mail', models.EmailField(blank=True, max_length=100, null=True)),
                ('Titel_nachgestellt', models.CharField(blank=True, max_length=20, null=True)),
                ('Zusatz_Adresse', models.CharField(blank=True, max_length=100, null=True)),
                ('Straße', models.CharField(blank=True, max_length=100, null=True)),
                ('PLZ', models.CharField(blank=True, max_length=10, null=True)),
                ('Ort', models.CharField(blank=True, max_length=100, null=True)),
                ('Mobiltelefon', models.CharField(blank=True, max_length=150, null=True)),
                ('Einladungscode', models.CharField(blank=True, max_length=10, null=True)),
                ('Funktion', models.CharField(blank=True, max_length=100, null=True)),
                ('Institution', models.CharField(blank=True, max_length=200, null=True)),
                ('ip', models.CharField(blank=True, max_length=500, null=True)),
                ('Anmerkungen', models.TextField(blank=True, null=True)),
                ('Anmerkungen_Sachbearbeiter', models.TextField(blank=True, null=True)),
                ('Übernachtung', models.CharField(blank=True, choices=[('EZ', 'EZ'), ('DZ', 'DZ'), ('Extern', 'Extern'), ('', '')], max_length=150)),
                ('Zweitperson_Zimmer', models.CharField(blank=True, max_length=150, null=True)),
                ('JSON', models.TextField(max_length=10000)),
                ('Status', models.CharField(blank=True, choices=[('', ''), ('zu bestätigen', 'zu bestätigen'), ('bestätigt', 'bestätigt'), ('Warteliste', 'Warteliste'), ('abzusagen', 'abzusagen'), ('abgesagt', 'abgesagt'), ('in Klärung', 'in Klärung'), ('Teilnehmer storniert', 'Teilnehmer storniert'), ('Papierkorb', 'Papierkorb')], max_length=100, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500, null=True)),
                ('source_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True, verbose_name='eingegangen')),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
                ('entry_id', models.IntegerField(unique=True)),
                ('form_id', models.IntegerField(blank=True, null=True)),
                ('record_created_db', models.DateTimeField(auto_now_add=True, null=True)),
                ('Anrede', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Geschlecht')),
                ('GravityFormular', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='crm.GravityFormular')),
                ('Veranstaltung', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FormEntries', to='crm.Veranstaltung')),
                ('_person', models.ForeignKey(blank=True, help_text='Die Person, der diese Anmeldung automatisch zugeordnet wurde (oder erst aufgrund dieser Anmeldung hinterlegt wurde).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='formentries', to='crm.Person')),
                ('room_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='crm.FormEntry', verbose_name='Zweitperson im Zimmer')),
            ],
            options={
                'verbose_name': 'Formulareintrag',
                'verbose_name_plural': 'Formulareinträge',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('Bemerkungen_Sachbearbeiter', models.TextField(blank=True, null=True)),
                ('aktiv', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='crm.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'E-Mail-Adresse',
                'verbose_name_plural': 'E-Mail-Adressen',
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titel', models.CharField(blank=True, max_length=50)),
                ('Vorname', models.CharField(blank=True, max_length=100)),
                ('Familienname', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Betreff')),
                ('message', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Inhalt')),
                ('sent_on', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Zeitpunkt Versand')),
                ('E_Mail', models.EmailField(blank=True, max_length=100)),
                ('answered', models.BooleanField(default=False, verbose_name='beantwortet')),
                ('medium', models.IntegerField(choices=[(1, 'E-Mail'), (2, 'Telefon'), (3, 'Brief'), (4, 'persönlich'), (5, 'sonstiges')], verbose_name='Kommunikationsmittel')),
                ('type', models.IntegerField(choices=[(1, 'Einladung'), (2, 'Eingangsbestätigung Anmeldung'), (3, 'Teilnahmebestätigung'), (4, 'Absage an TN'), (5, 'Storno durch TN'), (6, 'sonstiges')], verbose_name='Art der Kommunikation')),
                ('Anrede', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Geschlecht')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication', to='crm.Veranstaltung')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication', to='crm.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Kommunikation',
                'verbose_name_plural': 'Kommunikation',
            },
        ),
    ]
